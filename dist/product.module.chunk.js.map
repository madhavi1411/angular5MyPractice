{"version":3,"sources":["./src/app/product/models/product.ts","./src/app/product/product-edit/product-edit.component.css","./src/app/product/product-edit/product-edit.component.html","./src/app/product/product-edit/product-edit.component.ts","./src/app/product/product-home/product-home.component.css","./src/app/product/product-home/product-home.component.html","./src/app/product/product-home/product-home.component.ts","./src/app/product/product-list/product-list.component.css","./src/app/product/product-list/product-list.component.html","./src/app/product/product-list/product-list.component.ts","./src/app/product/product-search/product-search.component.css","./src/app/product/product-search/product-search.component.html","./src/app/product/product-search/product-search.component.ts","./src/app/product/product.module.ts","./src/app/product/services/product.service.ts","./src/app/product/services/save-work-guard.service.ts"],"names":[],"mappings":"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","file":"product.module.chunk.js","sourcesContent":["export class Product {\n\n    id : number;\n    name : string;\n    price: number;\n    year: number;\n    weight: string;\n    brandId: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product/models/product.ts","module.exports = \"input.ng-invalid {\\n    border: 2px solid red;\\n}\\n\\n\\ninput.ng-dirty, select.ng-dirty {\\n    background: yellow;\\n\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product/product-edit/product-edit.component.css\n// module id = ./src/app/product/product-edit/product-edit.component.css\n// module chunks = product.module","module.exports = \"<h2>Product Edit -- {{product.name}}</h2>\\n\\n<button (click) = 'gotoList()'>GO BACK TO LIST</button>\\n\\n<form (ngSubmit) = 'saveProduct()' #productForm = 'ngForm'> \\n    <p *ngIf = 'productForm.invalid'>Invalid Data on Form</p>\\n    <p *ngIf = 'productForm.dirty'>Data on Form Changed</p>\\n  <div class=\\\"form-group\\\">\\n    <!-- ngModel has properties for checking the validations like required, minlength, maxlength -->\\n<label> Name: </label> <input [(ngModel)] = 'product.name' type='text' name = 'name' required minlength=\\\"3\\\" #productName = 'ngModel'/>\\n<p *ngIf = 'productName.invalid'>Invalid Name</p>\\n</div>\\nYear: <input [(ngModel)] = 'product.year'  type = 'number' name = 'year'/>\\nPrice: <input [(ngModel)] = 'product.price' type = 'number' name ='price'/>\\nWeight: <input [(ngModel)] = 'product.weight' type = 'text' name = 'weight' />\\n\\n<label>Brand</label>\\n<select name = 'brandId' [(ngModel)] = \\\"product.brandId\\\">\\n  <option [value] = \\\"brand.id\\\" *ngFor = 'let brand of brands'>{{brand.name}}</option>\\n</select> \\n\\n<button type = 'submit' >\\n  Save\\n</button>\\n\\n</form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product/product-edit/product-edit.component.html\n// module id = ./src/app/product/product-edit/product-edit.component.html\n// module chunks = product.module","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { ProductService } from '../services/product.service';\n\n// GET /api/products/34345\n// Edit existing data (id exist) or create new one (id is not present)\n\n// the following import helps to read the data from the url parameter\nimport {ActivatedRoute, //read url params\n      Router // helps to navigate between pages\n  } from '@angular/router';\nimport { Product } from '../models/product';\nimport { Brand } from '../models/brand';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport {NgForm} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.css']\n})\nexport class ProductEditComponent implements OnInit, OnDestroy {\n\n\n  product: Product = new Product(); //create \n  brands: Brand[] = [];\n  \n  // to stop the processing request when component is not in scope.\n  subscription: Subscription;\n\n  @ViewChild('productForm')\n  productForm : NgForm;\n\n\n  constructor(private route: ActivatedRoute, private router: Router, private productService: ProductService) { }\n\n  ngOnInit() {\n    const id = this.route.snapshot.params['id'];\n    console.log (\" ID is : \", id );\n\n    // GET product with id\n    this.subscription = this.productService.getProduct(id).subscribe(product => {\n      this.product = product;\n    });\n\n    // GET list of all Brands\n    this.productService.getBrands().subscribe(brands => {\n      this.brands = brands;\n    });\n    \n  }\n\n  gotoList() {\n    this.router.navigateByUrl('/products');  // goes to product list \n\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  saveProduct() {\n    console.log(\"Saved Product: \", this.product);\n\n\n    if (this.productForm.invalid) {\n      alert('Invalid form data');\n      return;\n    }\n    this.productService.saveProduct(this.product).subscribe(savedProduct => {\n\n      //option 1: continue working same form\n      this.product = savedProduct;\n\n      this.productForm.reset(savedProduct);\n\n      //option 2: goto to list page.\n      this.gotoList();\n    });   \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product/product-edit/product-edit.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product/product-home/product-home.component.css\n// module id = ./src/app/product/product-home/product-home.component.css\n// module chunks = product.module","module.exports = \"<div class = 'container'>\\n   <h2> Product Home</h2>\\n\\n   <div>\\n     <a routerLink = '/products' ngClass = 'button' routerLinkActive = 'success' [routerLinkActiveOptions] = '{exact: true}'>List</a>\\n      <a routerLink = '/products/create' class = 'button' routerLinkActive = 'success'>Create</a>\\n      <a routerLink = '/products/search' class = 'button' routerLinkActive = 'success'>Search</a>\\n   </div> \\n\\n   <!-- <ul class=\\\"nav nav-tabs\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/products\\\" routerLinkActive = 'success' [routerLinkActiveOptions] = '{exact: true}'>List</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink = '/products/create' routerLinkActive = 'success'>Create</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink = '/products/search' routerLinkActive = 'success'>Search</a>\\n      </li>\\n     \\n    </ul> -->\\n\\n   <router-outlet>\\n\\n   </router-outlet>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product/product-home/product-home.component.html\n// module id = ./src/app/product/product-home/product-home.component.html\n// module chunks = product.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-home',\n  templateUrl: './product-home.component.html',\n  styleUrls: ['./product-home.component.css']\n})\nexport class ProductHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product/product-home/product-home.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product/product-list/product-list.component.css\n// module id = ./src/app/product/product-list/product-list.component.css\n// module chunks = product.module","module.exports = \"\\n<h2>Product List [Cart {{cartItems.length}}]</h2>\\n\\nObservable {{products$}}\\n\\n<label >Field Name</label>\\n<select [(ngModel)]=\\\"fieldName\\\">\\n  <option value='price'>Price</option>\\n  <option value='year'>Year</option>\\n  <option value='weight'>Weight</option>\\n</select>\\n\\n<label>Condition</label>\\n<select [(ngModel)]=\\\"predicate\\\">\\n  <option value=\\\"gt\\\"> &gt; </option>\\n  <option value=\\\"lt\\\"> &lt; </option>\\n</select>\\n\\n<label>Value</label> \\n<input [(ngModel)]=\\\"expectedValue\\\" />\\n\\n<p> Filtering for {{fieldName}} {{predicate}} {{expectedValue}} </p>\\n\\n\\n  <div class=\\\"table-responsive\\\">\\n  <table class=\\\"table  table-hover\\\">\\n      <thead class=\\\"thead-dark\\\">\\n    <tr>\\n    <th>ID</th>\\n    <th>Name</th>\\n    <th>Price</th>\\n    <th>Year</th>\\n    <th>Weight</th>\\n    <th>Brand Id</th>\\n    <th>Delete</th>\\n    </tr>\\n    </thead>\\n\\n    <!-- <tr *ngFor = 'let product of (products | filter:fieldName:predicate:expectedValue)'> -->\\n      <!-- Observable way to acces products - async pipe is provided by Angular which does the subscribe for itself  \\n            cons: we can't handle the error cases, we should be sure that it is going to be success.\\n            pros: we avoid the boiler code to subscribe in the components\\n                  also unsubscribes when we move out of this page\\n          -->\\n        <tr *ngFor = 'let product of (products$ | async | filter:fieldName:predicate:expectedValue)'>\\n      <td>{{product.id}}</td>\\n      <!-- <td>{{product.name}}</td> -->\\n      <td> \\n        <a [routerLink] = \\\"['/', 'products', 'edit', product.id]\\\">  <!-- '/'' - delimiter, for all the next coming strings products/edit/product.id - this is how it forms -->\\n          {{product.name}}\\n        </a>\\n      </td>\\n      <td>{{product.price}}</td>\\n      <td>{{product.year}}</td>\\n      <td>{{product.weight}}</td>\\n      <td>{{product.brandId}}</td>\\n      <td>\\n        <button (click) = deleteProduct(product)>Delete</button>\\n        <button (click) = addToCart(product)>Add to Cart</button>\\n\\n      </td>\\n    </tr>\\n\\n\\n    \\n    </table>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product/product-list/product-list.component.html\n// module id = ./src/app/product/product-list/product-list.component.html\n// module chunks = product.module","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ProductService } from '../services/product.service';\nimport { Product } from '../models/product';\nimport { CartItem, DataService } from '../../shared/services/data.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n\n\n  // products : Product[] = [];\n\n  //how to reduce the boiler place code\n  products$ : Observable<Product[]>     // $ - at the end of variable name to represent async that the data will be delayed\n\n  // to stop the processing request when component is not in scope.\n  // subscription: Subscription;\n\n  //how to reduce the boiler place code\n\n\n  cartSubscription : Subscription;\n  cartItems : CartItem[] = [];\n\n  fieldName: string;\n  predicate: string;\n  expectedValue: any;\n\n  constructor(private productService: ProductService, private dataService : DataService) {\n\n   }\n\n  ngOnInit() {\n    // this.subscription = this.productService.getProducts().subscribe(products => {\n    //   this.products = products;\n\n    //   console.log(\"got products: \", this.products);\n      \n    // });\n\n    this.products$ = this.productService.getProducts();\n\n    // workaround to pre-fill the number of cart items when we go back to another tab and come here again -- Start\n    // this.cartItems = this.dataService.cartItems;\n    // workaround -- END  ( Actual Way is publish using BehaviourSubject)\n\n    this.cartSubscription = this.dataService.cartItemsSource.subscribe(cartItems => {\n      this.cartItems = cartItems;\n      console.log(\"Product list CART Subscription, \", cartItems);\n    });\n\n  }\n\n  addToCart(product: Product) {\n    let cartItem: CartItem = {\n      id : product.id,\n      name: product.name,\n      price: product.price\n    };\n    \n    this.dataService.addItem(cartItem);\n\n\n  }\n\n  deleteProduct(product: Product) {\n\n  }\n\n  ngOnDestroy(): void {\n    // if (!this.subscription.closed) {\n    //   this.subscription.unsubscribe();\n    // }\n\n    // this.cartSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product/product-list/product-list.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product/product-search/product-search.component.css\n// module id = ./src/app/product/product-search/product-search.component.css\n// module chunks = product.module","module.exports = \"<p>\\n  product-search works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/product/product-search/product-search.component.html\n// module id = ./src/app/product/product-search/product-search.component.html\n// module chunks = product.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-search',\n  templateUrl: './product-search.component.html',\n  styleUrls: ['./product-search.component.css']\n})\nexport class ProductSearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product/product-search/product-search.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductHomeComponent } from './product-home/product-home.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\nimport { ProductSearchComponent } from './product-search/product-search.component';\n\nimport {RouterModule, Routes} from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ProductService } from './services/product.service';\nimport { SharedModule } from '../shared/shared.module';\nimport { SaveAlertGuard } from '../shared/guards/save-alert.guard';\nimport { SaveWorkGuardService } from './services/save-work-guard.service';\n\nexport const routes: Routes = [\n  {\n    // path: 'products',\n    // when we do the lazy loading of product module\n    path: '',\n    component: ProductHomeComponent,\n\n    //nested navigation\n    children: [\n      {\n        path: '',\n        component: ProductListComponent\n      },\n      {\n        path: 'edit/:id',\n        component: ProductEditComponent,\n        canDeactivate: [SaveWorkGuardService]\n      },\n      {\n        path: 'create',\n        component: ProductEditComponent,\n        canDeactivate: [SaveWorkGuardService]\n      },\n      {\n        path: 'search',\n        component: ProductSearchComponent\n      }\n    ]\n  }\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    //FIXME: forChild\n    // RouterModule.forRoot(routes),\n    // For lazy loading\n    RouterModule.forChild(routes),\n    SharedModule\n  ],\n  declarations: [ProductHomeComponent, ProductListComponent, ProductEditComponent, ProductSearchComponent],\n  providers: [\n    ProductService,\n    SaveWorkGuardService\n  ]\n})\nexport class ProductModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product/product.module.ts","import { Injectable } from '@angular/core';\n\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Product } from '../models/product';\nimport { environment } from '../../../environments/environment';\nimport { Brand } from '../models/brand';\n\n\nconsole.log(\"ENV: \" , environment)\n\n@Injectable()\nexport class ProductService { \n  \n\n  // Dependency injection (DI)\n  constructor(private http: HttpClient) { \n\n  }\n\n  getProducts(): Observable<Product[]> {\n    // let productApi : string = 'http://localhost:7070/api/products';\n    // let delayedProductApi: string = \"http://localhost:7070/delayed/api/products\";\n\n    const productApi : string = `${environment.apiEndPoint}/api/products`;\n    const delayedProductApi: string = `${environment.apiEndPoint}/delayed/api/products`;\n   \n  \n    return this.http.get<Product[]>(productApi);\n  }\n\n  getBrands(): Observable<Brand[]> {\n    // let productApi : string = 'http://localhost:7070/api/products';\n    // let delayedProductApi: string = \"http://localhost:7070/delayed/api/products\";\n\n    const brandsapi : string = `${environment.apiEndPoint}/api/brands`;\n   \n    return this.http.get<Brand[]>(brandsapi);\n  }\n\n  // GET /api/products/12345\n  getProduct(id): Observable<Product> {\n    return this.http.get<Product>(`${environment.apiEndPoint}/api/products/${id}`);\n  }\n\n  //update\n  //PUT /api/products/123\n  // {json data}\n\n  // server receives, commmit data to db\n  // server read data from db, sends back to client\n  private updateProduct(product: Product): Observable<Product> {\n    return this.http.put<Product>(`${environment.apiEndPoint}/api/products/${product.id}`, product);\n  }\n  \n\n  //Create no ID\n  //POST /api/products\n  // {json data}\n\n  // server receives, commit data to db, server generates id\n  // server read data from db, sends back to client, with id.\n  private createProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(`${environment.apiEndPoint}/api/products`, product);\n  }\n\n\n  saveProduct(product: Product): Observable<Product> {\n    if (product.id) {\n      return this.updateProduct(product);\n    }\n \n    return this.createProduct(product);\n }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/product/services/product.service.ts","\nimport {Injectable} from '@angular/core';\nimport {CanDeactivate} from '@angular/router';\nimport { ProductEditComponent } from '../product-edit/product-edit.component';\n\n@Injectable()\nexport class SaveWorkGuardService \n        implements CanDeactivate<ProductEditComponent> {\n\n    // angular passes the component instance\n\n    canDeactivate(target: ProductEditComponent) {\n        // return true/false\n        // true, you can leave the component\n        // false, stay at component\n\n        if (target.productForm.pristine) { //no changes\n            return true;\n        }\n\n        //alert warning, form is changed\n        let result: boolean;\n\n        result = window.confirm('unsaved data, proceed?');\n\n        return result;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/product/services/save-work-guard.service.ts"],"sourceRoot":"webpack:///"}